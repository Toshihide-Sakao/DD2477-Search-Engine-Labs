//
//  Information retrieval course
//  First version: Johan Boye 2016
//
// In this file you can put your regular expressions
// for matching non-standard words (like mail addresses).
//
// As you have probably already understood, lines beginning
// with "//" are comments.
//
// The regular expression below is an example of a useful
// pattern. You can keep it, modify it, or remove it, as you
// wish.



// ADD YOUR PATTERNS HERE

// URL
// hex: %([\da-fA-F]){2}
// domain: ([^;/?:@&=+$,?<>#%]|(%[\da-fA-F]{2}))+
// IP: (\d+.)+\d+
// port: :\d{4}
// search part: /[^;/?:@&=+$,?<>#%]+
// fragment: #[^;/?:@&=+$,?<>#%]+

http(s)?://((([^;/?$<>#%]|(%[\da-fA-F]{2}))*)[/#?]?)*

// email
[a-zA-z0-9_\.]{1,64}@[a-zA-z0-9_\.]{1,255}

// phone
\+\d+

// special e.g.
([A-Za-z]+\.)+[A-Za-z]+\.

// comma
([\d]+,)+[\d]+

// : clock
([\d]+\:)+[\d]+

// e.g. and 2.4.1 and IP
([A-Za-z\d]+(\.|_|-))+[A-Za-z\d]+


// $ number
\$\d+

// alph and numbers
[a-zA-Z]+\d+

// Twenty-four seven
\d+/\d+

// ' apostrophe
[a-zA-Z]*'[a-zA-Z]+\z

// The patterns will be tried from top to bottom, so it is a
// good idea to put more specific patterns above more general
// patterns.


